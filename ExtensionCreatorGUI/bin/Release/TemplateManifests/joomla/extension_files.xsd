<?xml version="1.0" encoding="UTF-8"?>
<xs:schema
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:tm="http://www.templatemaker.org/2012/schema"
	targetNamespace="http://www.templatemaker.org/2012/schema"
	elementFormDefault="qualified">
	<!-- TODO: for IndexHtmlFile just allow them add some code in the xml file..
		 maybe put the IndexHtmlFile as a resource -->
	<xs:element
		name="extensionFiles">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="tm:resourceHolder">
					<xs:sequence>
						<xs:element name="archiveName" type="xs:string" minOccurs="0" maxOccurs="1" />
						<xs:element name="inheritableAttributes" minOccurs="0" maxOccurs="1" >
							<xs:complexType>
								<xs:sequence>
									<xs:element name="attribute" type="xs:string" maxOccurs="unbounded" />
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="files" type="tm:files" maxOccurs="unbounded" />
					</xs:sequence>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="resourceHolder">
		<xs:sequence>
			<xs:element ref="tm:resources" minOccurs="0" maxOccurs="1"></xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="resources">
		<xs:complexType>
		<!-- TODO: test this using xi:include -->
		<!-- TODO: use this for module files -->
			<xs:choice>
				<xs:element name="folder" maxOccurs="unbounded">
					<xs:complexType>
						<xs:complexContent>
							<xs:extension base="tm:folder">
								<xs:attribute
									name="id"
									type="xs:string"
									use="required" />
							</xs:extension>
						</xs:complexContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="file" maxOccurs="unbounded" >
					<xs:complexType>
						<xs:complexContent>
							<xs:extension base="tm:file">
								<xs:attribute
									name="id"
									type="xs:string"
									use="required" />
							</xs:extension>
						</xs:complexContent>
					</xs:complexType>
				</xs:element>		
			</xs:choice>	
		</xs:complexType>
		<!-- TODO: Test this unique resource identifier.
		           check that this xpath gets evaluated relative to the resources element! -->
    	 <xs:unique name="uniqueResourceNames">
			  <xs:selector xpath="*"/>
			  <xs:field xpath="@id"/>
		 </xs:unique>
	</xs:element>
	<xs:complexType name="files">
		<xs:complexContent>
			<xs:extension base="tm:resourceHolder">
				<xs:choice>
					<xs:element name="folder" type="tm:folder" maxOccurs="unbounded" />
					<xs:element name="file" type="tm:file" maxOccurs="unbounded" />
				</xs:choice>
				<xs:attribute
					name="for"
					type="xs:string"
					use="required" >
					<xs:annotation>
						<xs:documentation>This should be the name of a task this set of folders belong to.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:attributeGroup name="directoryElement">
		<xs:attribute
			name="visible"
			type="xs:boolean"
			use="optional"
			default="true" />
		<xs:attribute
			name="archiveAs"
			type="xs:string"
			use="optional" />
		<xs:attribute
			name="exportAs"
			type="xs:string"
			use="optional" />
	</xs:attributeGroup>
	<xs:complexType name="folder">
		<xs:choice>
			<xs:element name="folder" type="tm:folder" maxOccurs="unbounded" />
			<xs:element name="file" type="tm:file" maxOccurs="unbounded" />
		</xs:choice>
		<xs:attribute
			name="name"
			type="xs:string"
			use="required" />
		<xs:attributeGroup ref="tm:directoryElement"></xs:attributeGroup>
		<xs:anyAttribute />
	</xs:complexType>
	<xs:complexType name="file">
        <xs:annotation>
        	<xs:documentation>Either the template attribute or the function attribute must be used, but not both.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
			<xs:extension
				base="xs:string">
				<xs:attribute
					name="template"
					type="xs:string"/>
				<xs:attribute
					name="function"
					type="xs:string" />
				<xs:attribute
					name="processFile"
					type="xs:string"
					use="optional"
					default="true" />
				<xs:attributeGroup ref="tm:directoryElement"></xs:attributeGroup>
				<xs:anyAttribute />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
</xs:schema>